[tool.poetry]
name = "Catalyst"
version = "21.10"
description = "Catalyst"
authors = ["Your Name <you@example.com>"]
license = "Apache License 2.0"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/catalyst-team/catalyst/issues",
"Documentation" = "https://catalyst-team.github.io/catalyst",
"Source Code" = "https://github.com/catalyst-team/catalyst",

[tool.nitpick]
style = "https://raw.githubusercontent.com/catalyst-team/codestyle/v21.09.2/styles/nitpick-style-catalyst.toml"

[tool.black]
line-length = 99

[tool.poetry.dependencies]
python = ">=3.6.2,<4.0"
numpy = ">=1.18"
torch = ">=1.3.0"

# dev
mock = {version="3.0.5", optional=true}
catalyst-codestyle = {version="21.09.2", optional=true}
black = {version="21.8b0", optional=true}
catalyst-sphinx-theme = {version="1.1.2", optional=true}
tomlkit = {version="0.7.2", optional=true}
pre-commit = {version="2.13.0", optional=true}

# albumentations
albumentations = {version="0.5.1", optional=true}

# deepspeed
deepspeed = {version=">=0.4.0", optional=true}

# cv
imageio = {version=">=2.5.0", optional=true}
opencv-python-headless = {version=">=4.1.1.26", optional=true}
scikit-image = {version = ">=0.16.1", optional=true}
torchvision = {version = ">=0.4.1", optional=true}
Pillow = {version = ">=6.1", optional=true}  # torchvision fix (https://github.com/python-pillow/Pillow/issues/4130)

# neptune
neptune-client = {version = ">=0.9.8", optional=true}

# optuna
optuna = {version = ">=2.0.0", optional=true}

# ml
scipy= {version = ">=1.4.1", optional = true}
matplotlib = {version = ">=3.1.0", optional = true}
pandas = {version = ">=0.25.0", optional = true}
scikit-learn = {version = ">=0.22", optional = true}

[tool.poetry.extras]
dev = ["mock", "catalyst-codestyle", "black", "catalyst-sphinx-theme","tomlkit","pre-commit"]
deepspeed = ["deepspeed"]
albumentations = ["albumentations"]
cv = ["imageio", "opencv-python-headless", "scikit-image", "torchvision", "Pillow"]
neptune = ["neptune"]
optuna = ["optuna"]
ml = ["scipy", "matplotlib", "pandas", "scikit-learn"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
